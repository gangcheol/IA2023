[
  {
    "objectID": "posts/coding test/PR/study/2023-08-23-00. PR study.html",
    "href": "posts/coding test/PR/study/2023-08-23-00. PR study.html",
    "title": "00. PR study (1)",
    "section": "",
    "text": "def solution(lst):\n    dic = {i : lst.count(i) for i in set(lst)}\n    M = max(dic.values())\n    l = [i for i in lst if lst.count(i)==M ]\n    if len(set(l)) !=1 :\n         return (-1) \n    else : \n         return (l[0])\n\n\nprint(solution([1, 2, 3, 3, 3, 4]))\nprint(solution([1, 1, 2, 2]))\nprint(solution([1]))\n\n3\n-1\n1\n\n\n\n\n\n\ndef solution(array):\n    while len(array) != 0: ## array길이가 0이 아닐때 까지\n        \n        for i, a in enumerate(set(array)):  ## 루프를 돌려서 유니크한 값 하나씩 array에서 제거\n           \n            array.remove(a)  ## 유니크한 값 하나씩 array에서 제거 하고 다시 루프로 돌아가 유니크한 값을 다시 뽑음\n        \n        if i == 0: return a ## 그러다 보면 값이 하나만 남게 되고 유니크 인덱스가 0이 될테니 해당 값이 최빈값!\n    \n    return -1 ## [1,1,2,2] 에 경우 두번에 루프에서 array의 모든값이 제거되므로 return -1이됨\n\n\nprint(solution([1, 2, 3, 3, 3, 4]))\nprint(solution([1, 1, 2, 2]))\nprint(solution([1]))\n\n3\n-1\n1\n\n\n\n\n\n\n\n\n\ndef solution(code):\n    m=0\n    m_l = []\n    for i in code : \n        if i ==  \"1\" :\n            m=m+1\n            m_l.append(m)\n        else :\n            m_l.append(m)\n    mode = [0 if i % 2 ==0 else 1 for i in m_l ]\n    rat = []\n    idx = list(range(0,len(code)))\n\n    for i in idx :\n        if (mode[i]== 0) and  (i  % 2==0) :\n                rat.append(code[i])\n        elif (mode[i]==1) and (i % 2== 1) :\n                rat.append(code[i])\n                \n    result = \"\".join([i for i in rat if i !=\"1\"])\n    if len(result) == 0 :\n        return \"EMPTY\"\n    else :\n        return result\n\n\nsolution(\"abc1abc1abc\")\n\n'acbac'\n\n\n\n\n\n\ndef solution(code):\n    return \"\".join(code.split(\"1\"))[::2] or \"EMPTY\"\n\n\nsolution(\"abc1abc1abc\")\n\n'acbac'"
  },
  {
    "objectID": "posts/coding test/PR/study/2023-08-23-00. PR study.html#최빈값-구하기",
    "href": "posts/coding test/PR/study/2023-08-23-00. PR study.html#최빈값-구하기",
    "title": "00. PR study (1)",
    "section": "",
    "text": "def solution(lst):\n    dic = {i : lst.count(i) for i in set(lst)}\n    M = max(dic.values())\n    l = [i for i in lst if lst.count(i)==M ]\n    if len(set(l)) !=1 :\n         return (-1) \n    else : \n         return (l[0])\n\n\nprint(solution([1, 2, 3, 3, 3, 4]))\nprint(solution([1, 1, 2, 2]))\nprint(solution([1]))\n\n3\n-1\n1\n\n\n\n\n\n\ndef solution(array):\n    while len(array) != 0: ## array길이가 0이 아닐때 까지\n        \n        for i, a in enumerate(set(array)):  ## 루프를 돌려서 유니크한 값 하나씩 array에서 제거\n           \n            array.remove(a)  ## 유니크한 값 하나씩 array에서 제거 하고 다시 루프로 돌아가 유니크한 값을 다시 뽑음\n        \n        if i == 0: return a ## 그러다 보면 값이 하나만 남게 되고 유니크 인덱스가 0이 될테니 해당 값이 최빈값!\n    \n    return -1 ## [1,1,2,2] 에 경우 두번에 루프에서 array의 모든값이 제거되므로 return -1이됨\n\n\nprint(solution([1, 2, 3, 3, 3, 4]))\nprint(solution([1, 1, 2, 2]))\nprint(solution([1]))\n\n3\n-1\n1"
  },
  {
    "objectID": "posts/coding test/PR/study/2023-08-23-00. PR study.html#코드-처리하기",
    "href": "posts/coding test/PR/study/2023-08-23-00. PR study.html#코드-처리하기",
    "title": "00. PR study (1)",
    "section": "",
    "text": "def solution(code):\n    m=0\n    m_l = []\n    for i in code : \n        if i ==  \"1\" :\n            m=m+1\n            m_l.append(m)\n        else :\n            m_l.append(m)\n    mode = [0 if i % 2 ==0 else 1 for i in m_l ]\n    rat = []\n    idx = list(range(0,len(code)))\n\n    for i in idx :\n        if (mode[i]== 0) and  (i  % 2==0) :\n                rat.append(code[i])\n        elif (mode[i]==1) and (i % 2== 1) :\n                rat.append(code[i])\n                \n    result = \"\".join([i for i in rat if i !=\"1\"])\n    if len(result) == 0 :\n        return \"EMPTY\"\n    else :\n        return result\n\n\nsolution(\"abc1abc1abc\")\n\n'acbac'\n\n\n\n\n\n\ndef solution(code):\n    return \"\".join(code.split(\"1\"))[::2] or \"EMPTY\"\n\n\nsolution(\"abc1abc1abc\")\n\n'acbac'"
  },
  {
    "objectID": "posts/coding test/PR/study/2023-08-23-00. PR study.html#비밀지도",
    "href": "posts/coding test/PR/study/2023-08-23-00. PR study.html#비밀지도",
    "title": "00. PR study (1)",
    "section": "1. 비밀지도",
    "text": "1. 비밀지도\n- 두 개의 배열을 입력받아 다음과 같은 연산을 작성하는 코드를 작성하라\n\n\n예비학습 : 비트 연산 사용하기\n- 해당 문제는 주어진 이진수를 비트 (or)연산을 이용하여 해결하는 문제이다.\n\n비트 연산 표\n\n\n\n\n\n\n\n\n연산자\n설명\n\n\n\n\n& (and)\n대응되는 비트가 모두 1이면 1을 반환\n\n\nㅣ (or)\n대응되는 비트 중에서 하나라도 1이면 1을 반환\n\n\n^ (xor)\n대응되는 비트가 서로 다르면 1을 반환\n\n\n~ (not)\n비트를 1이면 0으로, 0이변 1로 반전시킴\n\n\n&lt;&lt; (left shift)\n지정한 수만큼 비트를 왼쪽으로 전부 이동시킴 (거듭제곱)\n\n\n&gt;&gt; (right shift)\n위와 반대\n\n\n\n- 해당 문제는 주어진 이진수를 비트 (or)연산을 이용하여 해결하는 문제이다.\n1. 배열 셋팅\n\nn=5\narr1 = [9,1,28,18,11]\narr2 = [30,1,21,17,28]\n\n2 비트연산 확인\n\nprint(f'''\n   십진수 : {arr1[1]} -&gt; 이진수 변환 : { bin(arr1[0])}\n   십진수 : {arr2[1]} -&gt; 이진수 변환 : { bin(arr2[1])}\n   \n   비트연산(or) : {format(arr1[1] | arr2[1],\"b\")}\n   \n''')\n\n\n   십진수 : 1 -&gt; 이진수 변환 : 0b1001\n   십진수 : 1 -&gt; 이진수 변환 : 0b1\n   \n   비트연산(or) : 1\n   \n\n\n\n3 해당 문제는 다섯칸 전부를 채워야 하므로 비었는 부분을 0으로 채워주기\n\nr.zfill(width) : width는 숫자의 자릿수로 비어있는 부분을 0으로 채워준다.\n\n\nr = format(arr1[1] | arr2[1],\"b\")\nprint(f\"비트연산(or) : {r}, 비트연산.zfill : {r.zfill(n)}\" )\n\n비트연산(or) : 1, 비트연산.zfill : 00001\n\n\n4 “1”을 “#” 으로 바꿔주기, 0은 공백으로 바꿔주기\n\nr.zfill(n).replace(\"1\",\"#\").replace(\"0\",\" \")\n\n'    #'\n\n\n4 loof를 이용하여 전체의 적용\n\nresult = []\nfor i,j in zip(arr1,arr2) :\n    r = format(i | j,\"b\").zfill(n).replace(\"1\",\"#\").replace(\"0\",\" \")\n    result.append(r)\n\n5 결과확인\n\nresult\n\n['#####', '    #', '### #', '#  ##', '#####']\n\n\n\n\n풀이1\n\ndef solution (n,arr1,arr2) :\n    result = []\n    for i,j in zip(arr1,arr2) :\n        r = format(i | j,\"b\").zfill(n).replace(\"1\",\"#\").replace(\"0\",\" \")\n        result.append(r)            \n    return result"
  },
  {
    "objectID": "posts/coding test/PR/study/2023-08-23-00. PR study.html#숫자-문자열과-영단어",
    "href": "posts/coding test/PR/study/2023-08-23-00. PR study.html#숫자-문자열과-영단어",
    "title": "00. PR study (1)",
    "section": "2. 숫자 문자열과 영단어",
    "text": "2. 숫자 문자열과 영단어\n- 다음과 같은 문자와 숫자가 섞인 문자열이 주어졌을 떼 문자를 숫자로 바꿔서 완전한 숫자로 바꾸기\n\n\"one4seveneight\" \\(\\to\\) 1478\n\n\n예비학습\n1 다음과 같은 리스트를 생성\n\nlst=  [\"zero\",'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n\n\nprint(lst)\n\n['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n\n\n2 replace 함수를 이용해서 바뀌는지 확인!\n\ns = \"12one456nine12\"\n\n\ns.replace(lst[0],str(1))\n\n'12one456nine12'\n\n\n3 loop를 이용하여 문자로 표기된 것들을 모두 숫자로 변경!\n\nfor i in range(0,10) :\n    s=s.replace(lst[i],str(i))\n\n\nint(s)\n\n121456912\n\n\n\n\n풀이 1\n\ndef solution(s):\n    lst=  [\"zero\",'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n    for i in range(0,10) :\n        s=s.replace(lst[i],str(i))\n    return int(s)\n\n\nsolution(s)\n\n121456912\n\n\n\n\n풀이 2\n\nnum_dic = {\"zero\":\"0\", \"one\":\"1\", \"two\":\"2\", \"three\":\"3\", \"four\":\"4\", \"five\":\"5\", \"six\":\"6\", \"seven\":\"7\", \"eight\":\"8\", \"nine\":\"9\"}\n\ndef solution(s):\n    answer = s\n    for key, value in num_dic.items():\n        answer = answer.replace(key, value)\n    return int(answer)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IA2023",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nAug 23, 2023\n\n\n00. PR study (1)\n\n\nGC \n\n\n\n\nAug 16, 2023\n\n\n00. Lv. 0\n\n\nGC \n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\n- 전북대학교 통계학과 학사(부전공: 컴퓨터공학) 졸업 | 3.67 / 4.50 | 2015. 03 ~ 2021. 02\n- 전북대학교 통계학과 석사 졸업 | 4.44 / 4.50 | 2021. 03 ~ 2023. 02"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About Me",
    "section": "Experience",
    "text": "Experience\n- 국민연금공단 빅데이터부 현장실습 | 2020. 03 ~ 2020. 06\n- 지역 문화산업 융복합 데이터 전문가 과정 | 과학기술정보통신부, 한국데이터산업진흥원 | 2021. 06 ~ 2021. 08\n- 빅데이터 혁신공유대학사업 서포터즈 |전북대학교 빅데이터 현신공유대학사업| 2021. 07. 01 ~ 2021. 10. 31\n- KT AIVLE School DX Consultant Track | KT | 2023. 08 ~"
  },
  {
    "objectID": "about.html#publications",
    "href": "about.html#publications",
    "title": "About Me",
    "section": "Publications",
    "text": "Publications\n- 데이터 분석을 통한 지역별 고령친화도 시각화\n`-` 김영선, 강민구, 이강철 등  | 문화융복합아카이빙연구소 | 2021. 10 | 기록관리/보존 \n- 핵심어 추출 및 데이터 증강기법을 이용한 텍스트 분류 모델 성능 개선\n`-` 이강철, 안정용 | 한국자료분석학회 | 한국자료분석학회 | 2022. 10 | 통계학"
  },
  {
    "objectID": "about.html#certificate",
    "href": "about.html#certificate",
    "title": "About Me",
    "section": "Certificate",
    "text": "Certificate\n- 워드프로세서 | 대한상공회의소 | 19-19-017981 | 2019. 08. 30\n- 데이터분석준전문가(ADsP) | 한국데이터진흥원 | ADsP-0223898 | 2019. 10. 01\n- 사회조사분석사 2급 | 한국산업인력공단 | 19201142418N | 2019. 10. 01"
  },
  {
    "objectID": "about.html#conctact",
    "href": "about.html#conctact",
    "title": "About Me",
    "section": "Conctact",
    "text": "Conctact\n- rkdcjf8232@gmail.com"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html",
    "title": "00. Lv. 0",
    "section": "",
    "text": "sol = lambda x : 2022-(x-1)\n\nsol(40)\n\n1983\n\n\n\n\n\n\\[\\frac{n_1}{d_1} + \\frac{n_2}{d_2} = \\text {기약분수}\\]\n\nimport math\n\n\nn1,d1,n2,d2 = 1,2,3,4\n\n\ndef sol(n1,d1,n2,d2) :\n    d = d1*d2 ## 분모 \n    n = n1*d2 + n2*d1 ##분자\n\n    gcd = math.gcd(d,n) ## 최대공약수\n\n    return [n//gcd,d//gcd]\n\n\nsol(n1,d1,n2,d2)\n\n[5, 4]\n\n\n\nn = 10\nk = 3\n\nn1 = 12000*10\nk1 = (k-n//10)*2000\n\nn1+k1\n\n124000\n\n\n\n\n\n- 가장 긴 변의 길이는 다른 두 변이 길이의 합보다 작은지 확인하는 함수를 작성\n\n조건을 만족할경우 1, 아닐경우 2를 return\n\n\nlst= [2,10,4]\n\n\ndef solution(sides):\n    sides.sort() ## 이 부분 주의 !! sides = sides.sort()라고 하면 에러남\n    if sides[-1] &lt; sum(sides[:-1]) :\n        return 1\n    else :\n        return 2\n\n\nsolution(lst)\n\n2\n\n\n\n\n\n\ndef solution(num_list):\n    num_list.reverse() ## 이 부분도 주의!! reverse와 sort는 함수안에 return 값이 없기 때문\n    return num_list\n\n\nlst = [5, 3, 1, 1, 1, 0, 1]\n\n\nsolution(lst)\n\n[1, 0, 1, 1, 1, 3, 5]\n\n\n\nn = 20\n\n\nresult = 0\nfor i in range(1,101) :\n    if n % i == 0 :\n        result +=1\n\n\nresult\n\n6\n\n\n\n\n\n\ndef solution(price):\n    if price&gt;=500000:\n        price = price *0.8\n    elif price&gt;=300000:\n        price = price *0.9\n    elif price&gt;=100000:\n        price = price * 0.95\n    return int(price)\n\n\nsolution(580000)\n\n464000.0\n\n\n\n\n\n\n\ndef solution(my_string, n):\n    s = [i*n for i in my_string]\n    return \"\".join(s)\n\n\nsolution(\"hello\",3)\n\n'hhheeellllllooo'\n\n\n\n\n\n\n\ndef solution(money):\n    ice = 5500\n    x,y =  divmod(money,ice)\n    return [x,y]\n\n\nsolution(5500)\n\n[1, 0]\n\n\n\nsolution(15000)\n\n[2, 4000]\n\n\n\n\nl = list(\"aeiou\")\n\n\nl\n\n['a', 'e', 'i', 'o', 'u']\n\n\n\ns = \"bus\"\n\n\n\"\".join([i for i in s if i not in l])\n\n'bs'\n\n\n\n\n\n\ndef solution(my_string):\n    l = list(\"aeiou\")\n    return \"\".join([i for i in my_string if i not in l])\n\n\nsolution(\"bus\")\n\n'bs'\n\n\n\n\n\n\n\ndef solution(my_string):\n    l = list(range(0,10))\n    l = [str(i) for i in l ]\n    return sum([int(i) for i in my_string if i in l])\n\n\nsolution(\"aAb1B2cC34oOp\")\n\n10\n\n\n\n\n\n\n\nimport numpy as np\ndef solution(n):\n    if np.sqrt(n) - int(np.sqrt(n)) == 0 :\n        return 1\n    else :\n        return 2\n\n\nsolution(144)\n\n1\n\n\n\n\n\n\n\ndef solution(num_list):\n    even = [str(i) for i in  num_list if i %2==0]\n    odd = [str(i) for i in num_list if i %2==1]\n    even1 = int(\"\".join(even))\n    odd1 = int(\"\".join(odd))\n    return even1 + odd1\n\n\nlst = [1,2,3,4]\n\n\nsolution(lst)\n\n37\n\n\n\n\n\n\n- 작을경우 1, 클경우 0 을 return\n\nimport numpy as np\ndef solution(num_list):\n    p = np.prod(num_list)\n    s = (sum(num_list))**2\n    if p &lt;=s :\n        return 1\n    else : return 0\n\n\nsolution([1,2,3])\n\n1\n\n\n\n\nimport numpy as np\ndef solution(num_list):\n    L = len(num_list)\n    if L &gt;=11 : \n        return sum(num_list)\n    else : return np.prod(num_list)\n\n\nsolution([2, 3, 4, 5])\n\n120\n\n\n\n\n\n\n\ndef solution(s, alp):\n    return \"\".join([i.upper() if i in alp  else i for i in s])\n\n\ns= \"pro\"\n\n\nalp = \"p\"\n\n\nsolution(s,alp)\n\n'Pro'\n\n\n\n\n\n\nimport numpy as np\ndef solution(start, end):\n    result = list(np.arange(start,end-1,-1))\n    r = [int(i) for i in result]\n    return r\n\n\nsolution(10,3)\n\n[10, 9, 8, 7, 6, 5, 4, 3]\n\n\n\n\n\n- 길이가 홀수 \\(\\to\\) 짝수 인덱스에서 +n\n- 길이가 짝수 \\(\\to\\) 홀수 인덱스에서 +n\n\ndef solution(arr, n):\n    N=len(arr)\n    if N%2:\n        for i in range(0,N,2): arr[i]+=n\n    else:\n        for i in range(1,N,2): arr[i]+=n\n    return arr\n\n\n\n\n\narr의 각 원소에 대해 값이 50보다 크거나 같은 짝수라면 2로 나누고, 50보다 작은 홀수라면 2를 곱헤라.\n\narr = [1, 2, 3, 100, 99, 98]\n\n\ndef solution(arr):\n    for i in range(len(arr)) :\n        if arr[i] &gt;= 50 and arr[i] % 2==0 : \n            arr[i] =int(arr[i]/2)\n        elif arr[i] &lt; 50 and arr[i] % 2==1 : \n            arr[i] = int(arr[i]*2) \n    return arr\n\n\nsolution(arr)\n\n[2, 2, 6, 50, 99, 49]\n\n\n\n\n\n\n두 배열의 길이가 다르다면, 배열의 길이가 긴 쪽이 더 크다.\n배열의 길이가 같다면 각 배열에 있는 모든 원소의 합을 비교하여 다르다면 더 큰 쪽이 크고, 같다면 같다.\n두 정수 배열 arr1과 arr2가 주어질 때, 위에서 정의한 배열의 대소관계에 대하여 arr2가 크다면 -1, arr1이 크다면 1, 두 배열이 같다면 0을 return 하는 solution 함수를 작성\n\n\ndef solution(arr1, arr2):\n    if len(arr1) &lt; len(arr2) :\n        return -1\n    elif len(arr1) == len(arr2) :\n        if sum(arr1) &gt; sum(arr2) :\n            return 1\n        elif sum(arr1) == sum(arr2) : \n            return 0\n        else : return -1\n    else : return 1\n\n\narr1 = [49, 13]\narr2 =  [70, 11, 2]\n\n\nsolution(arr1,arr2)\n\n-1\n\n\n\na = [1, 2, 3, 4] + [2]\n\nprint(a)\n\n[1, 2, 3, 4, 2]"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex1.-나이-출력-2022년-기준",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex1.-나이-출력-2022년-기준",
    "title": "00. Lv. 0",
    "section": "",
    "text": "sol = lambda x : 2022-(x-1)\n\nsol(40)\n\n1983"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex2.-분수의-덧셈",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex2.-분수의-덧셈",
    "title": "00. Lv. 0",
    "section": "",
    "text": "\\[\\frac{n_1}{d_1} + \\frac{n_2}{d_2} = \\text {기약분수}\\]\n\nimport math\n\n\nn1,d1,n2,d2 = 1,2,3,4\n\n\ndef sol(n1,d1,n2,d2) :\n    d = d1*d2 ## 분모 \n    n = n1*d2 + n2*d1 ##분자\n\n    gcd = math.gcd(d,n) ## 최대공약수\n\n    return [n//gcd,d//gcd]\n\n\nsol(n1,d1,n2,d2)\n\n[5, 4]\n\n\n\nn = 10\nk = 3\n\nn1 = 12000*10\nk1 = (k-n//10)*2000\n\nn1+k1\n\n124000"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex3.-삼각형의-완성조건",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex3.-삼각형의-완성조건",
    "title": "00. Lv. 0",
    "section": "",
    "text": "- 가장 긴 변의 길이는 다른 두 변이 길이의 합보다 작은지 확인하는 함수를 작성\n\n조건을 만족할경우 1, 아닐경우 2를 return\n\n\nlst= [2,10,4]\n\n\ndef solution(sides):\n    sides.sort() ## 이 부분 주의 !! sides = sides.sort()라고 하면 에러남\n    if sides[-1] &lt; sum(sides[:-1]) :\n        return 1\n    else :\n        return 2\n\n\nsolution(lst)\n\n2"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex4.-배열-뒤집기",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex4.-배열-뒤집기",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(num_list):\n    num_list.reverse() ## 이 부분도 주의!! reverse와 sort는 함수안에 return 값이 없기 때문\n    return num_list\n\n\nlst = [5, 3, 1, 1, 1, 0, 1]\n\n\nsolution(lst)\n\n[1, 0, 1, 1, 1, 3, 5]\n\n\n\nn = 20\n\n\nresult = 0\nfor i in range(1,101) :\n    if n % i == 0 :\n        result +=1\n\n\nresult\n\n6"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex5.-옷가게-할인소수점-이하-버리기",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex5.-옷가게-할인소수점-이하-버리기",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(price):\n    if price&gt;=500000:\n        price = price *0.8\n    elif price&gt;=300000:\n        price = price *0.9\n    elif price&gt;=100000:\n        price = price * 0.95\n    return int(price)\n\n\nsolution(580000)\n\n464000.0"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex6.-문자열-반복-출력",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex6.-문자열-반복-출력",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(my_string, n):\n    s = [i*n for i in my_string]\n    return \"\".join(s)\n\n\nsolution(\"hello\",3)\n\n'hhheeellllllooo'"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex7.-아메리카노를-몇-잔-살-수-있는지",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex7.-아메리카노를-몇-잔-살-수-있는지",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(money):\n    ice = 5500\n    x,y =  divmod(money,ice)\n    return [x,y]\n\n\nsolution(5500)\n\n[1, 0]\n\n\n\nsolution(15000)\n\n[2, 4000]\n\n\n\n\nl = list(\"aeiou\")\n\n\nl\n\n['a', 'e', 'i', 'o', 'u']\n\n\n\ns = \"bus\"\n\n\n\"\".join([i for i in s if i not in l])\n\n'bs'"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex8.-모음제거",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex8.-모음제거",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(my_string):\n    l = list(\"aeiou\")\n    return \"\".join([i for i in my_string if i not in l])\n\n\nsolution(\"bus\")\n\n'bs'"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex8.-숨어있는-숫자의-덧셈",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex8.-숨어있는-숫자의-덧셈",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(my_string):\n    l = list(range(0,10))\n    l = [str(i) for i in l ]\n    return sum([int(i) for i in my_string if i in l])\n\n\nsolution(\"aAb1B2cC34oOp\")\n\n10"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex9.-제곱수-판별하기",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex9.-제곱수-판별하기",
    "title": "00. Lv. 0",
    "section": "",
    "text": "import numpy as np\ndef solution(n):\n    if np.sqrt(n) - int(np.sqrt(n)) == 0 :\n        return 1\n    else :\n        return 2\n\n\nsolution(144)\n\n1"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex10.-홀수짝수이어붙인-후-더하기",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex10.-홀수짝수이어붙인-후-더하기",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(num_list):\n    even = [str(i) for i in  num_list if i %2==0]\n    odd = [str(i) for i in num_list if i %2==1]\n    even1 = int(\"\".join(even))\n    odd1 = int(\"\".join(odd))\n    return even1 + odd1\n\n\nlst = [1,2,3,4]\n\n\nsolution(lst)\n\n37"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex-11.-모든-원소들의-합의-제곱이-모든-원소들의-곱보다-작으면",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex-11.-모든-원소들의-합의-제곱이-모든-원소들의-곱보다-작으면",
    "title": "00. Lv. 0",
    "section": "",
    "text": "- 작을경우 1, 클경우 0 을 return\n\nimport numpy as np\ndef solution(num_list):\n    p = np.prod(num_list)\n    s = (sum(num_list))**2\n    if p &lt;=s :\n        return 1\n    else : return 0\n\n\nsolution([1,2,3])\n\n1\n\n\n\n\nimport numpy as np\ndef solution(num_list):\n    L = len(num_list)\n    if L &gt;=11 : \n        return sum(num_list)\n    else : return np.prod(num_list)\n\n\nsolution([2, 3, 4, 5])\n\n120"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex12.-특정-문자열-대문자로-변경",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex12.-특정-문자열-대문자로-변경",
    "title": "00. Lv. 0",
    "section": "",
    "text": "def solution(s, alp):\n    return \"\".join([i.upper() if i in alp  else i for i in s])\n\n\ns= \"pro\"\n\n\nalp = \"p\"\n\n\nsolution(s,alp)\n\n'Pro'"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex13.-감소하는-배열-생성",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex13.-감소하는-배열-생성",
    "title": "00. Lv. 0",
    "section": "",
    "text": "import numpy as np\ndef solution(start, end):\n    result = list(np.arange(start,end-1,-1))\n    r = [int(i) for i in result]\n    return r\n\n\nsolution(10,3)\n\n[10, 9, 8, 7, 6, 5, 4, 3]"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex14.-배열의-길이에-따른-연산",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex14.-배열의-길이에-따른-연산",
    "title": "00. Lv. 0",
    "section": "",
    "text": "- 길이가 홀수 \\(\\to\\) 짝수 인덱스에서 +n\n- 길이가 짝수 \\(\\to\\) 홀수 인덱스에서 +n\n\ndef solution(arr, n):\n    N=len(arr)\n    if N%2:\n        for i in range(0,N,2): arr[i]+=n\n    else:\n        for i in range(1,N,2): arr[i]+=n\n    return arr"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex15.-조건에-맞게-수열-변환하기-1",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex15.-조건에-맞게-수열-변환하기-1",
    "title": "00. Lv. 0",
    "section": "",
    "text": "arr의 각 원소에 대해 값이 50보다 크거나 같은 짝수라면 2로 나누고, 50보다 작은 홀수라면 2를 곱헤라.\n\narr = [1, 2, 3, 100, 99, 98]\n\n\ndef solution(arr):\n    for i in range(len(arr)) :\n        if arr[i] &gt;= 50 and arr[i] % 2==0 : \n            arr[i] =int(arr[i]/2)\n        elif arr[i] &lt; 50 and arr[i] % 2==1 : \n            arr[i] = int(arr[i]*2) \n    return arr\n\n\nsolution(arr)\n\n[2, 2, 6, 50, 99, 49]"
  },
  {
    "objectID": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex16.-접미사에-해당-인덱스-포함",
    "href": "posts/coding test/PR/2023-08-16-00. Lv 0.html#ex16.-접미사에-해당-인덱스-포함",
    "title": "00. Lv. 0",
    "section": "",
    "text": "두 배열의 길이가 다르다면, 배열의 길이가 긴 쪽이 더 크다.\n배열의 길이가 같다면 각 배열에 있는 모든 원소의 합을 비교하여 다르다면 더 큰 쪽이 크고, 같다면 같다.\n두 정수 배열 arr1과 arr2가 주어질 때, 위에서 정의한 배열의 대소관계에 대하여 arr2가 크다면 -1, arr1이 크다면 1, 두 배열이 같다면 0을 return 하는 solution 함수를 작성\n\n\ndef solution(arr1, arr2):\n    if len(arr1) &lt; len(arr2) :\n        return -1\n    elif len(arr1) == len(arr2) :\n        if sum(arr1) &gt; sum(arr2) :\n            return 1\n        elif sum(arr1) == sum(arr2) : \n            return 0\n        else : return -1\n    else : return 1\n\n\narr1 = [49, 13]\narr2 =  [70, 11, 2]\n\n\nsolution(arr1,arr2)\n\n-1\n\n\n\na = [1, 2, 3, 4] + [2]\n\nprint(a)\n\n[1, 2, 3, 4, 2]"
  }
]